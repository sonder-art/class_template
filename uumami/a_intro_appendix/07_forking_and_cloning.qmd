---
title: "A.7 Fork & Clone: Get Your Personal Project Copy"
format:
  html:
    css:
      - ../styles/main.css
      - ../styles/themes/evangelion.css
---

::: {.objective}
### Your Goals for This Section
- **Understand the Fork and Clone workflow**, the standard way to copy projects.
- **Fork the class repository** to create a personal copy on your GitHub account.
- **Clone your fork** to download a working copy to your computer.
:::

## The Standard Workflow: Fork, then Clone

This is how almost all collaborative and open-source software development starts. You need to get a copy of a project from GitHub onto your computer. This is a two-step process:

1.  **Forking**: This happens on the GitHub website. You create a personal, cloud-based copy of a repository.
2.  **Cloning**: This happens on your computer. You download your cloud-based copy from GitHub to your local machine so you can work on it.

::: {.callout-note title="What Is GitHub?"}
GitHub is like an **online library** for code.  
Every book on that shelf is a *repository* (often shortened to **repo**), a place where people can store, share, and discuss their projects.
:::

::: {.callout-definition title="Repository ≙ Folder + History"}
A **repository** is just a *folder* that also remembers **every version** of itself.  
When you **clone** a repo you are downloading that folder *plus* its built-in time machine to your own computer.
:::

::: {.definition title="The Library Book Analogy"}
-   The instructor's main project on GitHub is like a **master reference book** in a library. You can't check it out or write in it.
-   **Forking** is like going to the library's photocopier and making a **complete copy** of that book. The copy is now yours. It lives on your personal "bookshelf" (your GitHub account).
-   **Cloning** is like taking that photocopy from your bookshelf and bringing it to your **desk** (your computer) so you can actually read it and write notes in it.
:::

## Fork & Clone at a Glance

Below is a simple flow diagram that shows **where** each step happens and **what** you end up with:

```{mermaid}
graph LR
  classDef node fill:#ffffff,stroke:#007acc,stroke-width:2px,color:#000,font-size:16px,font-weight:bold;
  classDef action fill:#000000,stroke:#000000,stroke-width:2px,color:#ffffff,font-size:14px,font-weight:bold;

  A["Instructor's Repo on GitHub"]:::node --> F[Fork]:::action --> B["Your Fork on GitHub"]:::node --> Cn[Clone]:::action --> C["Folder on your computer"]:::node --> O[Open in Cursor]:::action --> D["Ready to code!"]:::node

  linkStyle default stroke:#007acc,stroke-width:3px;
```

*(If this diagram doesn't render, make sure you have [Mermaid](https://mermaid.js.org/) support enabled in Quarto > Preferences > Preview.)*

The flow reinforces three ideas:
1. **Cloud → Cloud → Local** – You first copy in the cloud (Fork), *then* download to your machine (Clone).
2. **Nothing breaks** – Forking never changes the instructor's repo; cloning never changes your fork until you push changes back.
3. **Outcome** – You finish with a normal folder that you can open in any editor.

The full workflow is always: **Fork first (on GitHub), then Clone second (in your terminal).**

## Step 1: Forking the Class Repository (On GitHub)

Let's create your personal cloud copy.

1.  Navigate to the main class project repository: **{{< meta repository_url >}}**
2.  In the top-right corner of the page, find and click the **"Fork"** button.
3.  On the "Create a new fork" page, you can leave all the settings as they are. Just click the green **"Create fork"** button.

After a moment, you will be taken to a new GitHub page. Look at the top-left corner. It should now say `[your-username] / [repository-name]`. This confirms you are now looking at *your* personal copy.

## Step 2: Cloning Your Fork (On Your Computer)

Now we bring that repository down from the cloud to your local machine.

1.  On the GitHub page of **your forked repository**, click the big green **"< > Code"** button.
2.  In the dropdown that appears, make sure the **"SSH"** tab is selected. It should have a blue line under it.
3.  You will see an address that starts with `git@github.com:...`. Click the **Copy icon** next to it to copy the address to your clipboard.
4.  Open your terminal app (Terminal on Mac, Ubuntu/WSL on Windows).

::: {.callout-tip title="Where Should I Save My Project?"}
Create a single folder to hold *all* of your course work, for example:

```bash
mkdir -p ~/Documents/my-class-code
cd ~/Documents/my-class-code
```

Keeping everything in one place makes backups and navigation easier.  
Make sure you are **inside this folder** before you run `git clone`.  

❗ **Important:** Do *not* clone one repository *inside* another repository (never nest folders that contain a `.git` directory).
:::

5.  Once you are **inside your class folder** (e.g., `~/Documents/my-class-code`), use the `git clone` command followed by the address you copied.

    ```bash
    git clone [paste the SSH address you copied here]
    ```

    It will look like this:
    `git clone git@github.com:[your-username]/the-repo-name.git`

6.  Press **Enter**. Git will download the project into a new folder.

7.  Finally, open the new folder in Cursor (or your preferred editor) so you can start exploring the project files.

You're done! A new folder containing the entire class project now exists on your computer.

{{< include _nav.qmd >}}