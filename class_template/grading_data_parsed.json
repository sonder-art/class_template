{
  "modules": [
    {
      "id": "auth_implementation",
      "name": "Authentication System Implementation",
      "description": "Complete implementation and testing of the authentication system",
      "weight": 25.0,
      "order": 1,
      "color": "#ff6b35",
      "icon": "\ud83d\udd10"
    },
    {
      "id": "framework_basics",
      "name": "Framework Understanding & Setup",
      "description": "Understanding the framework architecture and completing initial setup tasks",
      "weight": 20.0,
      "order": 2,
      "color": "#4a90e2",
      "icon": "\ud83c\udfd7\ufe0f"
    },
    {
      "id": "content_management",
      "name": "Content Creation & Management",
      "description": "Creating and organizing course content following framework conventions",
      "weight": 15.0,
      "order": 3,
      "color": "#7ed321",
      "icon": "\ud83d\udcda"
    },
    {
      "id": "advanced_features",
      "name": "Advanced Features Implementation",
      "description": "Implementation of advanced framework features and customizations",
      "weight": 25.0,
      "order": 4,
      "color": "#9013fe",
      "icon": "\u26a1"
    },
    {
      "id": "deployment",
      "name": "Deployment & Production",
      "description": "Deploying the framework to production and handling real-world scenarios",
      "weight": 15.0,
      "order": 5,
      "color": "#f5a623",
      "icon": "\ud83d\ude80"
    }
  ],
  "constituents": [
    {
      "id": "auth_setup",
      "slug": "auth-setup",
      "name": "Authentication Setup",
      "description": "Initial authentication system configuration and testing",
      "module_id": "auth_implementation",
      "weight": 30.0,
      "type": "implementation",
      "max_attempts": 3
    },
    {
      "id": "auth_integration",
      "slug": "auth-integration",
      "name": "Authentication Integration",
      "description": "Integration of authentication with existing framework components",
      "module_id": "auth_implementation",
      "weight": 40.0,
      "type": "implementation",
      "max_attempts": 2
    },
    {
      "id": "auth_testing",
      "slug": "auth-testing",
      "name": "Authentication Testing",
      "description": "Comprehensive testing of authentication flows and edge cases",
      "module_id": "auth_implementation",
      "weight": 30.0,
      "type": "testing",
      "max_attempts": 5
    },
    {
      "id": "framework_concepts",
      "slug": "framework-concepts",
      "name": "Framework Concepts",
      "description": "Understanding of core framework architecture and principles",
      "module_id": "framework_basics",
      "weight": 40.0,
      "type": "theory",
      "max_attempts": 2
    },
    {
      "id": "initial_setup",
      "slug": "initial-setup",
      "name": "Initial Setup",
      "description": "Successful completion of framework setup and configuration",
      "module_id": "framework_basics",
      "weight": 35.0,
      "type": "implementation",
      "max_attempts": 3
    },
    {
      "id": "build_validation",
      "slug": "build-validation",
      "name": "Build Validation",
      "description": "Successful build and deployment of framework instance",
      "module_id": "framework_basics",
      "weight": 25.0,
      "type": "implementation",
      "max_attempts": 5
    },
    {
      "id": "content_organization",
      "slug": "content-organization",
      "name": "Content Organization",
      "description": "Proper organization and naming of course content",
      "module_id": "content_management",
      "weight": 50.0,
      "type": "implementation",
      "max_attempts": 3
    },
    {
      "id": "documentation_quality",
      "slug": "documentation-quality",
      "name": "Documentation Quality",
      "description": "Quality and completeness of content documentation",
      "module_id": "content_management",
      "weight": 50.0,
      "type": "quality",
      "max_attempts": 2
    }
  ],
  "grading_policies": [
    {
      "module_id": null,
      "policy_name": "Universal 5-Rule Module Grading Policy",
      "version": "1.0",
      "policy_data": {
        "policy_metadata": {
          "name": "Universal 5-Rule Module Grading Policy",
          "version": "1.0",
          "description": "Applies 5-rule grading algorithm to all course modules",
          "author": "Course Framework",
          "applies_to": "all_modules"
        },
        "grading_rules": [
          {
            "rule_id": "exceptional_performance",
            "priority": 1,
            "description": "All grades > 9.0 \u2192 Final score = 10.0",
            "condition": {
              "type": "all_grades_above",
              "threshold": 9.0
            },
            "action": {
              "type": "set_final_score",
              "value": 10.0
            }
          },
          {
            "rule_id": "good_performance",
            "priority": 2,
            "description": "All grades > 8.0 \u2192 Average + bonus (linear interpolation 0.15-0.5)",
            "condition": {
              "type": "all_grades_above",
              "threshold": 8.0
            },
            "action": {
              "type": "add_linear_bonus",
              "min_bonus": 0.15,
              "max_bonus": 0.5,
              "min_average": 8.0,
              "max_average": 9.0,
              "cap_at": 10.0
            }
          },
          {
            "rule_id": "acceptable_performance",
            "priority": 3,
            "description": "All grades > 7.5 \u2192 Use exact average (no bonus, no penalty)",
            "condition": {
              "type": "all_grades_above",
              "threshold": 7.5
            },
            "action": {
              "type": "use_average"
            }
          },
          {
            "rule_id": "warning_zone",
            "priority": 4,
            "description": "Any grade between 6.0-7.5 \u2192 Average - 0.3 penalty (minimum 6.0)",
            "condition": {
              "type": "any_grade_in_range",
              "min_threshold": 6.0,
              "max_threshold": 7.5
            },
            "action": {
              "type": "subtract_penalty",
              "penalty": 0.3,
              "minimum_score": 6.0
            }
          },
          {
            "rule_id": "problematic_performance",
            "priority": 5,
            "description": "Any grade < 6.0 \u2192 Remove highest grade and average the rest",
            "condition": {
              "type": "any_grade_below",
              "threshold": 6.0
            },
            "action": {
              "type": "remove_highest_and_average",
              "protection": {
                "min_items_required": 2,
                "fallback_action": "use_average"
              }
            }
          }
        ],
        "policy_settings": {
          "target_modules": [],
          "decimal_places": 2,
          "grade_range": {
            "minimum": 0.0,
            "maximum": 10.0
          },
          "cache_results": true,
          "cache_duration_minutes": 30,
          "log_rule_applications": false,
          "track_policy_usage": true
        },
        "rule_documentation": {
          "condition_types": {
            "all_grades_above": "All grades in the set must be above the threshold",
            "any_grade_below": "At least one grade must be below the threshold",
            "any_grade_in_range": "At least one grade must be within min_threshold and max_threshold (inclusive)"
          },
          "action_types": {
            "set_final_score": "Set final score to a fixed value",
            "use_average": "Use the simple average of all grades",
            "add_linear_bonus": "Add bonus based on linear interpolation",
            "subtract_penalty": "Subtract fixed penalty with minimum score protection",
            "remove_highest_and_average": "Remove highest grade and average remaining grades"
          }
        },
        "usage_examples": [
          {
            "scenario": "Student has grades [9.2, 9.5, 9.8]",
            "rule_applied": "exceptional_performance",
            "calculation": "All > 9.0, so final = 10.0"
          },
          {
            "scenario": "Student has grades [8.2, 8.7, 8.9]",
            "rule_applied": "good_performance",
            "calculation": "All > 8.0, avg=8.6, bonus=0.36, final=8.96"
          },
          {
            "scenario": "Student has grades [7.8, 8.2, 8.5]",
            "rule_applied": "acceptable_performance",
            "calculation": "All > 7.5, so final = average = 8.17"
          },
          {
            "scenario": "Student has grades [6.5, 8.0, 8.5]",
            "rule_applied": "warning_zone",
            "calculation": "Has grade 6.5 in warning zone, avg=7.67, final=7.37"
          },
          {
            "scenario": "Student has grades [5.5, 7.0, 8.5]",
            "rule_applied": "problematic_performance",
            "calculation": "Has grade < 6.0, remove highest (8.5), avg of [5.5,7.0] = 6.25"
          }
        ]
      },
      "sql_function_name": null
    }
  ],
  "validation_summary": {
    "total_modules": 5,
    "total_constituents": 8,
    "total_policies": 1,
    "errors": [],
    "warnings": []
  }
}